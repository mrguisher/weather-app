{"version":3,"sources":["components/Button/Button.js","components/Card/Card.js","components/NextDays/NextDays.js","components/ResultCard/ResultCard.js","App.js","serviceWorker.js","index.js"],"names":["Button","props","react_default","a","createElement","className","onClick","onClickHandle","children","Card","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","whichPage","isInputSelected","setState","refs","input","value","_this2","ref","placeholder","placeholderToggle","onKeyPress","inputOnKeyPress","components_Button_Button","Component","src","imageSource","alt","temp","hour","ResultCard","displayDay","isSingle","currentDay","calculate","kelvin","Math","ceil","round","dataManager","json","jsonData","currPress","list","main","pressure","currHum","humidity","currTemp","weatherID","weather","icon","map","x","dt_txt","slice","day1","push","day2","day3","city","dayName","bind","assertThisInitialized","Array","cityName","concat","NextDays_NextDays","i","App","classToggleHandle","classToggle","changeCard","setTimeout","e","key","fetchAPI","results","trim","fetch","then","response","cod","components_Card_Card","component","components_ResultCard_ResultCard","toUpperCase","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6b791a6b.chunk.js","sourcesContent":["import React from 'react';\nimport './Button.css';\n\nconst Button = (props) => {\n    return(\n        <button className=\"button\" onClick={props.onClickHandle} >{props.children}</button>\n    )\n}\nexport default Button;\n","import React, { Component } from 'react';\nimport './Card.css';\nimport Button from '../Button/Button.js';\nimport '../../App.css'\n\nclass Card extends Component{\nconstructor() {\n    super();\n\n    this.state = {\n        whichPage: 'results',\n        isInputSelected: false\n    };\n} \n\nplaceholderToggle() {\n    this.setState({isInputSelected: true});\n    this.refs.input.className=\"input\";\n    this.refs.input.value === \"Nie znaleziono miasta\" || \"Wpisz miasto\" ? this.refs.input.value = \"\" : this.refs.input.placeholder = \"\";\n}\n\ncomponentDidMount() {\n    this.setState({isInputSelected: false})\n}\n\n    render() {\n        return (\n\n            <div ref='mainBox' className={this.props.className}>\n                <h1 className=\"heading\">Pogoda</h1>\n                <h2 className=\"heading-secondary\">Sprawdź pogodę w swoim mieście</h2>\n                <input ref=\"input\" className=\"input\" placeholder={this.state.isInputSelected ? '' : 'Wpisz miasto'} onClick={() => this.placeholderToggle()} onKeyPress={this.props.inputOnKeyPress}></input>\n                <Button onClickHandle={this.props.onClickHandle}>Wyślij</Button>\n            </div>\n\n        );\n    }\n}\nexport default Card;","import React from 'react';\nimport './NextDays.css';\n\n\nconst Button = (props) => {\n    return(\n        <div className=\"temp-small-box\">\n            <img className=\"temperature-img-small\" src={props.imageSource} alt=\"weather\"></img>\n            <p className=\"temp-small-item\">{props.temp} &deg;C</p>\n            <p className=\"temp-small-item\">{props.hour}</p>\n        </div>\n    )\n}\nexport default Button;\n","import React, { Component } from 'react';\nimport '../../App.css';\nimport './ResultCard.css';\nimport Button from '../Button/Button';\nimport NextDays from '../NextDays/NextDays'\n\n class ResultCard extends Component{\n  constructor() {\n    super();\n\n    this.state = {\n      city: \"\",\n      currTemp: \"\",\n      currHum: \"\",\n      currPress: \"\",\n      weatherID: \"02d\",\n\n      currentDay: \"\",\n\n      dayName: [\n        'Dziś',\n        'Jutro',\n        'Pojutrze',\n      ],\n      isSingle: true,\n      \n  \n    };\n    this.dataManager = this.dataManager.bind(this);\n    this.day1 = new Array();\n    this.day2 = new Array();\n    this.day3 = new Array();\n\n    this.round = this.round.bind(this);\n    this.calculate = this.calculate.bind(this);\n\n  }   \n\n  componentDidMount() {\n    this.dataManager();\n  }\n\n  displayDay = (a) => { \n    this.setState({isSingle: false});\n\n    if (a === 0) {\n      this.setState({currentDay: \"day1\"})\n    } else  if (a === 1){\n      this.setState({currentDay: \"day2\"})\n    } else {\n      this.setState({currentDay: \"day3\"})\n    }\n  }\n  \n  calculate = (kelvin) => {\n    return Math.ceil(kelvin - 272.15);\n  }\n  round = (value) => {\n    return Math.ceil(value);\n  }\n\n\n  dataManager = () => {\n\n        const json = this.props.json;\n        this.setState({jsonData: json});\n\n        //  CURRENT WEATHER //\n\n        this.setState({currPress: this.round(json.list[0].main.pressure)});\n        this.setState({currHum: this.round(json.list[0].main.humidity)});\n        this.setState({currTemp: this.calculate(json.list[0].main.temp)});\n        \n        this.setState({weatherID: json.list[0].weather[0].icon})\n\n        // 3-DAYS WEATHER //\n\n        json.list.map((x) => x.dt_txt.slice(0, 10) === json.list[0].dt_txt.slice(0, 10) && this.day1.push(x));\n        json.list.map((x) => x.dt_txt.slice(0, 10) !== json.list[0].dt_txt.slice(0, 10) && this.day2.push(x));\n        json.list.map((x) => x.dt_txt.slice(0, 10) !== json.list[0].dt_txt.slice(0, 10) && this.day3.push(x));\n\n  }\n\n  render() {\n    return (\n\n        <div ref=\"resultBox\" className={this.props.className}>\n            <div className=\"left-container\">\n              <h1 className=\"heading-results\">{this.props.cityName}</h1>\n              <div className=\"temperature-large_container\">\n                <div className=\"temperature-large\">{this.state.currTemp}&deg;C</div>\n                <img className=\"temperature-img\" src={`http://openweathermap.org/img/w/${this.state.weatherID}.png`} alt=\"weather\"></img>\n              </div>\n            \n              <p className=\"info\">Aktualnie ciśnienie w mieście {this.props.cityName} wynosi {this.state.currPress} hPa</p>\n              <p className=\"info\">Wilgotność powietrza {this.state.currHum} %</p>\n              <p className=\"info margin-top\">Sprawdź pogodę na kolejne dni:</p>\n              \n              <div className=\"togggle-days_container\">\n              \n              {[0,1,2].map((x) => <div className='toggle-days' onClick={() => this.displayDay(x)}>{this.state.dayName[x]}</div>)}\n              \n              </div>\n                  <Button onClickHandle={this.props.onClickHandle}>Powrót do wyszukiwania</Button>\n            </div>\n            <div className={this.state.isSingle ? \"hidden\" : \"temps_container\" }>\n\n              {this.state.currentDay === \"day1\" && this.day1.map((x) => <NextDays temp={this.calculate(x.main.temp)} imageSource={`http://openweathermap.org/img/w/${x.weather[0].icon}.png`} hour={x.dt_txt.slice(11,16)}/> )}\n              {this.state.currentDay === \"day2\" && this.day2.map((x, i) => i < 8 && <NextDays temp={this.calculate(x.main.temp)} imageSource={`http://openweathermap.org/img/w/${x.weather[0].icon}.png`} hour={x.dt_txt.slice(11,16)} /> )}\n              {this.state.currentDay === \"day3\" && this.day3.map((x, i) => i >= 8 && i < 16 && <NextDays temp={this.calculate(x.main.temp)} imageSource={`http://openweathermap.org/img/w/${x.weather[0].icon}.png`} hour={x.dt_txt.slice(11,16)}/> )}\n\n            </div>\n        </div>\n      );\n  }\n}\nexport default ResultCard;","import React, { Component } from 'react';\nimport './App.css';\nimport Card from './components/Card/Card';\nimport ResultCard from './components/ResultCard/ResultCard.js';\n\nclass App extends Component {\n  constructor() {\n    super();\n    \n    this.state = {\n        whichPage: 'main',\n        classToggle: false,\n\n        json: '',\n   \n        city: ''\n    \n    };\n    } \n\n    // change cards and fade out\n    classToggleHandle = () => {\n      this.setState({classToggle: !this.state.classToggle});\n    }\n    changeCard = () => {\n      this.classToggleHandle();\n      setTimeout(() => {\n        this.state.whichPage === 'result' ? this.setState({whichPage: 'main'}) : this.setState({whichPage: 'result'});\n      },\n      1000);\n    }\n\n    // fetchAPI function on click and on enter\n    inputOnKeyPress = (e) => {\n      if(e.key === 'Enter') {this.fetchAPI()}\n    }\n\n    fetchAPI = () => {\n      const input = this.results.refs.input;\n\n      if (input.value.trim() !== '' && input.value.trim() !== 'Wpisz miasto') {\n      \n        fetch(\n          'https://api.openweathermap.org/data/2.5/forecast?q=' +\n          input.value +\n            '&appid=ae76d0efed32d9f29c4d54a5738b80ca'\n        )\n        .then(function(response) {\n          return response.json();\n        })\n        .then((jsonData) => {\n  \n          if (jsonData.cod === '200') {\n            this.setState({city: input.value})\n            this.setState({json: jsonData})\n            this.changeCard();\n          } else {\n              input.className = \"input red\";\n              input.value = \"Nie znaleziono miasta\";\n          }\n        })\n      }\n      else {\n        input.className = \"input red\";\n        input.value = \"Wpisz miasto\";\n    }\n    }\n    \n\n  render() {\n    return (\n      <div>\n\n        {this.state.whichPage === \"main\" ? (\n          <Card \n            ref={component => (this.results = component)}\n            className={this.state.classToggle ? \"fadeOut box \" : \"box\"}\n            onClickHandle={this.fetchAPI}\n            inputOnKeyPress={this.inputOnKeyPress}\n            />\n        ) : (\n          <ResultCard \n            \n            className={this.state.classToggle ? \"box result-card-box\" : \"fadeOut box result-card-box \"} \n            onClickHandle={this.changeCard}\n            cityName={this.state.city.toUpperCase()}\n            json={this.state.json}\n            />\n        )}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}